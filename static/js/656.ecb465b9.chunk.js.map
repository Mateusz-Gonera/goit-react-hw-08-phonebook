{"version":3,"file":"static/js/656.ecb465b9.chunk.js","mappings":"oLACA,MAAwB,4BAAxB,EAAgE,gCAAhE,EAA4G,gC,+ECM/FA,EAAe,WAC1B,IAAMC,GAAYC,EAAAA,EAAAA,IAAO,GACjBC,GAASC,EAAAA,EAAAA,KAATD,KACFE,GAAWC,EAAAA,EAAAA,MAqBjB,OACE,SAACC,EAAA,EAAD,CAAWC,UAAWC,EAAtB,UACE,UAACC,EAAA,EAAD,CAAMF,UAAU,qBAAqBG,SArBpB,SAAAC,GACnBA,EAAIC,iBACJ,IAAMC,EAAOF,EAAIG,cACXC,EAAOF,EAAKG,SAASD,KAAKE,MAC1BC,EAAQL,EAAKG,SAASE,MAAMD,MAC5BE,EAAWN,EAAKG,SAASG,SAASF,MACxC,GAAIf,EAAKa,OAASA,EAChB,OAAOK,MAAM,GAAD,OAAIL,EAAJ,wBAEdX,GACEiB,EAAAA,EAAAA,IAAS,CACPN,KAAAA,EACAG,MAAAA,EACAC,SAAAA,KAGJN,EAAKS,OACN,EAIG,WACE,cAAGf,UAAWC,EAAd,+BACA,UAACC,EAAA,QAAD,CAAYF,UAAU,OAAOgB,UAAWvB,EAAxC,WACE,SAACS,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEF,UAAWC,EACXgB,KAAK,OACLT,KAAK,OACLU,MAAM,wBACNC,UAAQ,QAGZ,UAACjB,EAAA,QAAD,CAAYF,UAAU,OAAOgB,UAAWvB,EAAxC,WACE,SAACS,EAAA,QAAD,sBACA,SAACA,EAAA,UAAD,CACEF,UAAWC,EACXgB,KAAK,QACLT,KAAK,QACLU,MAAM,iCACNC,UAAQ,QAGZ,UAACjB,EAAA,QAAD,CAAYF,UAAU,OAAOgB,UAAWvB,EAAxC,WACE,SAACS,EAAA,QAAD,wBACA,SAACA,EAAA,UAAD,CACEF,UAAWC,EACXgB,KAAK,WACLT,KAAK,WACLU,MAAM,uBACNE,UAAU,IACVD,UAAQ,QAGZ,SAACE,EAAA,EAAD,CAAQJ,KAAK,SAAb,iCAIP,EC5DD,EARiB,WACf,OACE,0BACE,SAACzB,EAAD,KAGL,C","sources":["webpack://react-homework-template/./src/components/RegisterForm/RegisterForm.module.css?a5d4","components/RegisterForm/RegisterForm.jsx","pages/Register/Register.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"input\":\"RegisterForm_input__FsgBz\",\"container\":\"RegisterForm_container__w0Atp\",\"paragraph\":\"RegisterForm_paragraph__766hg\"};","import styles from './RegisterForm.module.css';\nimport { nanoid } from 'nanoid';\nimport { Form, Button, Container } from 'react-bootstrap';\nimport { useAuth } from 'hooks/useAuth';\nimport { register } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nexport const RegisterForm = () => {\n  const elementId = nanoid(5);\n  const { user } = useAuth();\n  const dispatch = useDispatch();\n\n  const handleSubmit = evt => {\n    evt.preventDefault();\n    const form = evt.currentTarget;\n    const name = form.elements.name.value;\n    const email = form.elements.email.value;\n    const password = form.elements.password.value;\n    if (user.name === name) {\n      return alert(`${name} is already in base`);\n    }\n    dispatch(\n      register({\n        name,\n        email,\n        password,\n      })\n    );\n    form.reset();\n  };\n\n  return (\n    <Container className={styles.container}>\n      <Form className=\"border rounded p-4\" onSubmit={handleSubmit}>\n        <p className={styles.paragraph}>Register account</p>\n        <Form.Group className=\"mb-3\" controlId={elementId}>\n          <Form.Label>Username</Form.Label>\n          <Form.Control\n            className={styles.input}\n            type=\"name\"\n            name=\"name\"\n            title=\"For example: John Doe\"\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId={elementId}>\n          <Form.Label>E-mail</Form.Label>\n          <Form.Control\n            className={styles.input}\n            type=\"email\"\n            name=\"email\"\n            title=\"For example: example@email.com\"\n            required\n          />\n        </Form.Group>\n        <Form.Group className=\"mb-3\" controlId={elementId}>\n          <Form.Label>Password</Form.Label>\n          <Form.Control\n            className={styles.input}\n            type=\"password\"\n            name=\"password\"\n            title=\"Minimum 4 characters\"\n            minLength=\"4\"\n            required\n          />\n        </Form.Group>\n        <Button type=\"submit\">Submit Register</Button>\n      </Form>\n    </Container>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\n\nconst Register = () => {\n  return (\n    <div>\n      <RegisterForm />\n    </div>\n  );\n};\n\nexport default Register;\n"],"names":["RegisterForm","elementId","nanoid","user","useAuth","dispatch","useDispatch","Container","className","styles","Form","onSubmit","evt","preventDefault","form","currentTarget","name","elements","value","email","password","alert","register","reset","controlId","type","title","required","minLength","Button"],"sourceRoot":""}